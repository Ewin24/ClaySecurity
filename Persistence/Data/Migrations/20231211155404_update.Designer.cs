// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(ProyectoDotnetContext))]
    [Migration("20231211155404_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_general_ci")
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");

            modelBuilder.Entity("Persistence.Entities.Categoriapersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idcategoriaPersona");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombreCategoria");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("categoriapersona", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idCiudad");

                    b.Property<int>("DepartamentoIdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("Departamento_idDepartamento");

                    b.Property<string>("NombreCiudad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DepartamentoIdDepartamento" }, "fk_Ciudad_Departamento1_idx");

                    b.ToTable("ciudad", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Contactopersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idcontactoPersona");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.Property<int>("PersonaIdPersona")
                        .HasColumnType("int")
                        .HasColumnName("Persona_idPersona");

                    b.Property<int>("TipoContactoIdtipoContacto")
                        .HasColumnType("int")
                        .HasColumnName("tipoContacto_idtipoContacto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonaIdPersona" }, "fk_contactoPersona_Persona1_idx");

                    b.HasIndex(new[] { "TipoContactoIdtipoContacto" }, "fk_contactoPersona_tipoContacto1_idx");

                    b.ToTable("contactopersona", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idcontrato");

                    b.Property<int>("EstadoIdestado")
                        .HasColumnType("int")
                        .HasColumnName("estado_idestado");

                    b.Property<DateOnly?>("FechaContrato")
                        .HasColumnType("date")
                        .HasColumnName("fechaContrato");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("fechaFin");

                    b.Property<int>("PersonaIdCliente")
                        .HasColumnType("int")
                        .HasColumnName("Persona_idCliente");

                    b.Property<int>("PersonaIdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("Persona_idEmpleado");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonaIdCliente" }, "fk_contrato_Persona1_idx");

                    b.HasIndex(new[] { "PersonaIdEmpleado" }, "fk_contrato_Persona2_idx");

                    b.HasIndex(new[] { "EstadoIdestado" }, "fk_contrato_estado1_idx");

                    b.ToTable("contrato", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idDepartamento");

                    b.Property<string>("NombreDepartamento")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombreDepartamento");

                    b.Property<int>("PaisIdPais")
                        .HasColumnType("int")
                        .HasColumnName("Pais_IdPais");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PaisIdPais" }, "fk_Departamento_Pais1_idx");

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Direccionpersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("iddireccionPersona");

                    b.Property<string>("Direccion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("direccion");

                    b.Property<int>("PersonaIdPersona")
                        .HasColumnType("int")
                        .HasColumnName("Persona_idPersona");

                    b.Property<int>("TipoDireccionIdtipoDireccion")
                        .HasColumnType("int")
                        .HasColumnName("tipoDireccion_idtipoDireccion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonaIdPersona" }, "fk_direccionPersona_Persona1_idx");

                    b.HasIndex(new[] { "TipoDireccionIdtipoDireccion" }, "fk_direccionPersona_tipoDireccion1_idx");

                    b.ToTable("direccionpersona", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idestado");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("estado", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombrePais")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombrePais");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<int>("CategoriaPersonaIdcategoriaPersona")
                        .HasColumnType("int")
                        .HasColumnName("categoriaPersona_idcategoriaPersona");

                    b.Property<int>("CiudadIdCiudad")
                        .HasColumnType("int")
                        .HasColumnName("Ciudad_idCiudad");

                    b.Property<DateOnly?>("FechaRegistro")
                        .HasColumnType("date")
                        .HasColumnName("fechaRegistro");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.Property<int>("TipoPersonaIdtipoPersona")
                        .HasColumnType("int")
                        .HasColumnName("tipoPersona_idtipoPersona");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CiudadIdCiudad" }, "fk_Persona_Ciudad1_idx");

                    b.HasIndex(new[] { "CategoriaPersonaIdcategoriaPersona" }, "fk_Persona_categoriaPersona1_idx");

                    b.HasIndex(new[] { "TipoPersonaIdtipoPersona" }, "fk_Persona_tipoPersona1_idx");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Programacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ContratoIdcontrato")
                        .HasColumnType("int");

                    b.Property<int>("PersonaIdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("TurnosIdturnos")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("programacion", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Tipocontacto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idtipoContacto");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipocontacto", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Tipodireccion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idtipoDireccion");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipodireccion", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Tipopersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idtipoPersona");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipopersona", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Turno", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idturnos");

                    b.Property<TimeOnly?>("HoraTurnoFin")
                        .HasColumnType("time")
                        .HasColumnName("horaTurnoFin");

                    b.Property<TimeOnly?>("HoraTurnoInicio")
                        .HasColumnType("time")
                        .HasColumnName("horaTurnoInicio");

                    b.Property<string>("NombreTurno")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombreTurno");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("turnos", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Ciudad", b =>
                {
                    b.HasOne("Persistence.Entities.Departamento", "DepartamentoIdDepartamentoNavigation")
                        .WithMany("Ciudads")
                        .HasForeignKey("DepartamentoIdDepartamento")
                        .IsRequired()
                        .HasConstraintName("fk_Ciudad_Departamento1");

                    b.Navigation("DepartamentoIdDepartamentoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Contactopersona", b =>
                {
                    b.HasOne("Persistence.Entities.Persona", "PersonaIdPersonaNavigation")
                        .WithMany("Contactopersonas")
                        .HasForeignKey("PersonaIdPersona")
                        .IsRequired()
                        .HasConstraintName("fk_contactoPersona_Persona1");

                    b.HasOne("Persistence.Entities.Tipocontacto", "TipoContactoIdtipoContactoNavigation")
                        .WithMany("Contactopersonas")
                        .HasForeignKey("TipoContactoIdtipoContacto")
                        .IsRequired()
                        .HasConstraintName("fk_contactoPersona_tipoContacto1");

                    b.Navigation("PersonaIdPersonaNavigation");

                    b.Navigation("TipoContactoIdtipoContactoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Contrato", b =>
                {
                    b.HasOne("Persistence.Entities.Estado", "EstadoIdestadoNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("EstadoIdestado")
                        .IsRequired()
                        .HasConstraintName("fk_contrato_estado1");

                    b.HasOne("Persistence.Entities.Persona", "PersonaIdClienteNavigation")
                        .WithMany("ContratoPersonaIdClienteNavigations")
                        .HasForeignKey("PersonaIdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_contrato_Persona1");

                    b.HasOne("Persistence.Entities.Persona", "PersonaIdEmpleadoNavigation")
                        .WithMany("ContratoPersonaIdEmpleadoNavigations")
                        .HasForeignKey("PersonaIdEmpleado")
                        .IsRequired()
                        .HasConstraintName("fk_contrato_Persona2");

                    b.Navigation("EstadoIdestadoNavigation");

                    b.Navigation("PersonaIdClienteNavigation");

                    b.Navigation("PersonaIdEmpleadoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Departamento", b =>
                {
                    b.HasOne("Persistence.Entities.Pais", "PaisIdPaisNavigation")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisIdPais")
                        .IsRequired()
                        .HasConstraintName("fk_Departamento_Pais1");

                    b.Navigation("PaisIdPaisNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Direccionpersona", b =>
                {
                    b.HasOne("Persistence.Entities.Persona", "PersonaIdPersonaNavigation")
                        .WithMany("Direccionpersonas")
                        .HasForeignKey("PersonaIdPersona")
                        .IsRequired()
                        .HasConstraintName("fk_direccionPersona_Persona1");

                    b.HasOne("Persistence.Entities.Tipodireccion", "TipoDireccionIdtipoDireccionNavigation")
                        .WithMany("Direccionpersonas")
                        .HasForeignKey("TipoDireccionIdtipoDireccion")
                        .IsRequired()
                        .HasConstraintName("fk_direccionPersona_tipoDireccion1");

                    b.Navigation("PersonaIdPersonaNavigation");

                    b.Navigation("TipoDireccionIdtipoDireccionNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Persona", b =>
                {
                    b.HasOne("Persistence.Entities.Categoriapersona", "CategoriaPersonaIdcategoriaPersonaNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("CategoriaPersonaIdcategoriaPersona")
                        .IsRequired()
                        .HasConstraintName("fk_Persona_categoriaPersona1");

                    b.HasOne("Persistence.Entities.Ciudad", "CiudadIdCiudadNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("CiudadIdCiudad")
                        .IsRequired()
                        .HasConstraintName("fk_Persona_Ciudad1");

                    b.HasOne("Persistence.Entities.Tipopersona", "TipoPersonaIdtipoPersonaNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("TipoPersonaIdtipoPersona")
                        .IsRequired()
                        .HasConstraintName("fk_Persona_tipoPersona1");

                    b.Navigation("CategoriaPersonaIdcategoriaPersonaNavigation");

                    b.Navigation("CiudadIdCiudadNavigation");

                    b.Navigation("TipoPersonaIdtipoPersonaNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Programacion", b =>
                {
                    b.HasOne("Persistence.Entities.Contrato", "ContratoIdcontratoNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("programacion_ibfk_1");

                    b.HasOne("Persistence.Entities.Persona", "PersonaIdEmpleadoNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("programacion_ibfk_3");

                    b.HasOne("Persistence.Entities.Turno", "TurnosIdturnosNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("programacion_ibfk_2");

                    b.Navigation("ContratoIdcontratoNavigation");

                    b.Navigation("PersonaIdEmpleadoNavigation");

                    b.Navigation("TurnosIdturnosNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Categoriapersona", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Persistence.Entities.Ciudad", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Persistence.Entities.Contrato", b =>
                {
                    b.Navigation("Programacions");
                });

            modelBuilder.Entity("Persistence.Entities.Departamento", b =>
                {
                    b.Navigation("Ciudads");
                });

            modelBuilder.Entity("Persistence.Entities.Estado", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Persistence.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Persistence.Entities.Persona", b =>
                {
                    b.Navigation("Contactopersonas");

                    b.Navigation("ContratoPersonaIdClienteNavigations");

                    b.Navigation("ContratoPersonaIdEmpleadoNavigations");

                    b.Navigation("Direccionpersonas");

                    b.Navigation("Programacions");
                });

            modelBuilder.Entity("Persistence.Entities.Tipocontacto", b =>
                {
                    b.Navigation("Contactopersonas");
                });

            modelBuilder.Entity("Persistence.Entities.Tipodireccion", b =>
                {
                    b.Navigation("Direccionpersonas");
                });

            modelBuilder.Entity("Persistence.Entities.Tipopersona", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Persistence.Entities.Turno", b =>
                {
                    b.Navigation("Programacions");
                });
#pragma warning restore 612, 618
        }
    }
}
